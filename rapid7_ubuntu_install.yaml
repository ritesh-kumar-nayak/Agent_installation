---

- name: Install Rapid7 Scan Assistant
  hosts: ubuntu
  become: true
  # become_user: vmadmin
  vars:
    temp_path: /tmp/agent
    deb_package: R7ScanAssistant_amd64.deb
    unzipped: /tmp/agent/rapid7
    zipped: /tmp/agent/rapid7.tar
    config_src: /tmp/agent/rapid7/config.json
    config_dest: /etc/rapid7/ScanAssistant/config.json
    git_url: https://github.com/Python_for_devops/Agent_installation_packages/raw/main/rapid7.tar
    pat: '{{ lookup("env", "REPO_PAT") }}'    # Pat is uploaded to Azure Key-Vault and is being looked up as Environment variable.

  tasks:

    - name: create destination folder
      file: 
        path: "{{ temp_path }}"
        owner: vmadmin
        group: vmadmin
        mode: '0750'
        state: directory

    - name: Download the package using curl on the temp path
      command: "curl -LJO https://raw.githubusercontent.com/AnupamRoy91/Agent_installation_packages/main/rapid7.tar -u AnupamRoy91:{{pat}}"  # used the Access token to download the tar    
      args:        
        chdir: "{{temp_path}}"

    - name: Unzip Rapid7
      unarchive:
        src:  "{{temp_path}}/rapid7.tar"
        dest: "{{temp_path}}"
        remote_src: yes
    
    - name: Install Rapid7 Debian package
      shell: "dpkg -i {{ deb_package }}"
      args:
        chdir: "{{ temp_path }}/rapid7"
    
    - name: Check Rapid7 service status
      ansible.builtin.service:
        name: R7ScanAssistant.service
        state: started
      register: service_status
    
    - name: Display status
      debug:
        var: "{{service_status.state}}"

    - name: Copying the config.json
      copy:
        src: "{{config_src}}"
        dest: "{{config_dest}}"
        remote_src: yes
        
    - name: Restarting Rapid7
      ansible.builtin.service:
        name: R7ScanAssistant.service
        state: restarted

    - name: Delete Rapid7 files post installation
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{unzipped}}"
        - "{{zipped}}"
      when: "'started' == service_status.state"